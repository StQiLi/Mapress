/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/stream/route";
exports.ids = ["app/api/stream/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstream%2Froute&page=%2Fapi%2Fstream%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstream%2Froute.ts&appDir=%2FUsers%2Fsqli%2FDesktop%2FMapress%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsqli%2FDesktop%2FMapress&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstream%2Froute&page=%2Fapi%2Fstream%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstream%2Froute.ts&appDir=%2FUsers%2Fsqli%2FDesktop%2FMapress%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsqli%2FDesktop%2FMapress&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_sqli_Desktop_Mapress_src_app_api_stream_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/stream/route.ts */ \"(rsc)/./src/app/api/stream/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/stream/route\",\n        pathname: \"/api/stream\",\n        filename: \"route\",\n        bundlePath: \"app/api/stream/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/Users/sqli/Desktop/Mapress/src/app/api/stream/route.ts\",\n    nextConfigOutput,\n    userland: _Users_sqli_Desktop_Mapress_src_app_api_stream_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/stream/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZzdHJlYW0lMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnN0cmVhbSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnN0cmVhbSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnNxbGklMkZEZXNrdG9wJTJGTWFwcmVzcyUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZzcWxpJTJGRGVza3RvcCUyRk1hcHJlc3MmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QmaXNHbG9iYWxOb3RGb3VuZEVuYWJsZWQ9ISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNxQjtBQUNkO0FBQ1M7QUFDTztBQUNLO0FBQ21DO0FBQ2pEO0FBQ087QUFDZjtBQUNzQztBQUN6QjtBQUNNO0FBQ0M7QUFDaEI7QUFDa0I7QUFDcEY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsYUFBYSxPQUFvQyxJQUFJLENBQUU7QUFDdkQsd0JBQXdCLE1BQXVDO0FBQy9EO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FB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QTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsNkVBQTZFLGdGQUFjO0FBQzNGLGlDQUFpQyxRQUFRLEVBQUUsUUFBUTtBQUNuRCwwQkFBMEIsdUVBQVE7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxNQUFNO0FBQ047QUFDQSw0Q0FBNEMsNkZBQWU7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsMkZBQW1CO0FBQ3JEO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDZFQUFZO0FBQzFCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCB7IGdldFJlcXVlc3RNZXRhIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcmVxdWVzdC1tZXRhXCI7XG5pbXBvcnQgeyBnZXRUcmFjZXIsIFNwYW5LaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3RyYWNlL3RyYWNlclwiO1xuaW1wb3J0IHsgbm9ybWFsaXplQXBwUGF0aCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYXBwLXBhdGhzXCI7XG5pbXBvcnQgeyBOb2RlTmV4dFJlcXVlc3QsIE5vZGVOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9iYXNlLWh0dHAvbm9kZVwiO1xuaW1wb3J0IHsgTmV4dFJlcXVlc3RBZGFwdGVyLCBzaWduYWxGcm9tTm9kZVJlc3BvbnNlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL25leHQtcmVxdWVzdFwiO1xuaW1wb3J0IHsgQmFzZVNlcnZlclNwYW4gfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvdHJhY2UvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBnZXRSZXZhbGlkYXRlUmVhc29uIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvaW5zdHJ1bWVudGF0aW9uL3V0aWxzXCI7XG5pbXBvcnQgeyBzZW5kUmVzcG9uc2UgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9zZW5kLXJlc3BvbnNlXCI7XG5pbXBvcnQgeyBmcm9tTm9kZU91dGdvaW5nSHR0cEhlYWRlcnMsIHRvTm9kZU91dGdvaW5nSHR0cEhlYWRlcnMgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci93ZWIvdXRpbHNcIjtcbmltcG9ydCB7IGdldENhY2hlQ29udHJvbEhlYWRlciB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9jYWNoZS1jb250cm9sXCI7XG5pbXBvcnQgeyBJTkZJTklURV9DQUNIRSwgTkVYVF9DQUNIRV9UQUdTX0hFQURFUiB9IGZyb20gXCJuZXh0L2Rpc3QvbGliL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgTm9GYWxsYmFja0Vycm9yIH0gZnJvbSBcIm5leHQvZGlzdC9zaGFyZWQvbGliL25vLWZhbGxiYWNrLWVycm9yLmV4dGVybmFsXCI7XG5pbXBvcnQgeyBDYWNoZWRSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yZXNwb25zZS1jYWNoZVwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9zcWxpL0Rlc2t0b3AvTWFwcmVzcy9zcmMvYXBwL2FwaS9zdHJlYW0vcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3N0cmVhbS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3N0cmVhbVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc3RyZWFtL3JvdXRlXCJcbiAgICB9LFxuICAgIGRpc3REaXI6IHByb2Nlc3MuZW52Ll9fTkVYVF9SRUxBVElWRV9ESVNUX0RJUiB8fCAnJyxcbiAgICByZWxhdGl2ZVByb2plY3REaXI6IHByb2Nlc3MuZW52Ll9fTkVYVF9SRUxBVElWRV9QUk9KRUNUX0RJUiB8fCAnJyxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9zcWxpL0Rlc2t0b3AvTWFwcmVzcy9zcmMvYXBwL2FwaS9zdHJlYW0vcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcywgY3R4KSB7XG4gICAgdmFyIF9uZXh0Q29uZmlnX2V4cGVyaW1lbnRhbDtcbiAgICBsZXQgc3JjUGFnZSA9IFwiL2FwaS9zdHJlYW0vcm91dGVcIjtcbiAgICAvLyB0dXJib3BhY2sgZG9lc24ndCBub3JtYWxpemUgYC9pbmRleGAgaW4gdGhlIHBhZ2UgbmFtZVxuICAgIC8vIHNvIHdlIG5lZWQgdG8gdG8gcHJvY2VzcyBkeW5hbWljIHJvdXRlcyBwcm9wZXJseVxuICAgIC8vIFRPRE86IGZpeCB0dXJib3BhY2sgcHJvdmlkaW5nIGRpZmZlcmluZyB2YWx1ZSBmcm9tIHdlYnBhY2tcbiAgICBpZiAocHJvY2Vzcy5lbnYuVFVSQk9QQUNLKSB7XG4gICAgICAgIHNyY1BhZ2UgPSBzcmNQYWdlLnJlcGxhY2UoL1xcL2luZGV4JC8sICcnKSB8fCAnLyc7XG4gICAgfSBlbHNlIGlmIChzcmNQYWdlID09PSAnL2luZGV4Jykge1xuICAgICAgICAvLyB3ZSBhbHdheXMgbm9ybWFsaXplIC9pbmRleCBzcGVjaWZpY2FsbHlcbiAgICAgICAgc3JjUGFnZSA9ICcvJztcbiAgICB9XG4gICAgY29uc3QgbXVsdGlab25lRHJhZnRNb2RlID0gcHJvY2Vzcy5lbnYuX19ORVhUX01VTFRJX1pPTkVfRFJBRlRfTU9ERTtcbiAgICBjb25zdCBwcmVwYXJlUmVzdWx0ID0gYXdhaXQgcm91dGVNb2R1bGUucHJlcGFyZShyZXEsIHJlcywge1xuICAgICAgICBzcmNQYWdlLFxuICAgICAgICBtdWx0aVpvbmVEcmFmdE1vZGVcbiAgICB9KTtcbiAgICBpZiAoIXByZXBhcmVSZXN1bHQpIHtcbiAgICAgICAgcmVzLnN0YXR1c0NvZGUgPSA0MDA7XG4gICAgICAgIHJlcy5lbmQoJ0JhZCBSZXF1ZXN0Jyk7XG4gICAgICAgIGN0eC53YWl0VW50aWwgPT0gbnVsbCA/IHZvaWQgMCA6IGN0eC53YWl0VW50aWwuY2FsbChjdHgsIFByb21pc2UucmVzb2x2ZSgpKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IHsgYnVpbGRJZCwgcGFyYW1zLCBuZXh0Q29uZmlnLCBpc0RyYWZ0TW9kZSwgcHJlcmVuZGVyTWFuaWZlc3QsIHJvdXRlclNlcnZlckNvbnRleHQsIGlzT25EZW1hbmRSZXZhbGlkYXRlLCByZXZhbGlkYXRlT25seUdlbmVyYXRlZCwgcmVzb2x2ZWRQYXRobmFtZSB9ID0gcHJlcGFyZVJlc3VsdDtcbiAgICBjb25zdCBub3JtYWxpemVkU3JjUGFnZSA9IG5vcm1hbGl6ZUFwcFBhdGgoc3JjUGFnZSk7XG4gICAgbGV0IGlzSXNyID0gQm9vbGVhbihwcmVyZW5kZXJNYW5pZmVzdC5keW5hbWljUm91dGVzW25vcm1hbGl6ZWRTcmNQYWdlXSB8fCBwcmVyZW5kZXJNYW5pZmVzdC5yb3V0ZXNbcmVzb2x2ZWRQYXRobmFtZV0pO1xuICAgIGlmIChpc0lzciAmJiAhaXNEcmFmdE1vZGUpIHtcbiAgICAgICAgY29uc3QgaXNQcmVyZW5kZXJlZCA9IEJvb2xlYW4ocHJlcmVuZGVyTWFuaWZlc3Qucm91dGVzW3Jlc29sdmVkUGF0aG5hbWVdKTtcbiAgICAgICAgY29uc3QgcHJlcmVuZGVySW5mbyA9IHByZXJlbmRlck1hbmlmZXN0LmR5bmFtaWNSb3V0ZXNbbm9ybWFsaXplZFNyY1BhZ2VdO1xuICAgICAgICBpZiAocHJlcmVuZGVySW5mbykge1xuICAgICAgICAgICAgaWYgKHByZXJlbmRlckluZm8uZmFsbGJhY2sgPT09IGZhbHNlICYmICFpc1ByZXJlbmRlcmVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IE5vRmFsbGJhY2tFcnJvcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBjYWNoZUtleSA9IG51bGw7XG4gICAgaWYgKGlzSXNyICYmICFyb3V0ZU1vZHVsZS5pc0RldiAmJiAhaXNEcmFmdE1vZGUpIHtcbiAgICAgICAgY2FjaGVLZXkgPSByZXNvbHZlZFBhdGhuYW1lO1xuICAgICAgICAvLyBlbnN1cmUgL2luZGV4IGFuZCAvIGlzIG5vcm1hbGl6ZWQgdG8gb25lIGtleVxuICAgICAgICBjYWNoZUtleSA9IGNhY2hlS2V5ID09PSAnL2luZGV4JyA/ICcvJyA6IGNhY2hlS2V5O1xuICAgIH1cbiAgICBjb25zdCBzdXBwb3J0c0R5bmFtaWNSZXNwb25zZSA9IC8vIElmIHdlJ3JlIGluIGRldmVsb3BtZW50LCB3ZSBhbHdheXMgc3VwcG9ydCBkeW5hbWljIEhUTUxcbiAgICByb3V0ZU1vZHVsZS5pc0RldiA9PT0gdHJ1ZSB8fCAvLyBJZiB0aGlzIGlzIG5vdCBTU0cgb3IgZG9lcyBub3QgaGF2ZSBzdGF0aWMgcGF0aHMsIHRoZW4gaXQgc3VwcG9ydHNcbiAgICAvLyBkeW5hbWljIEhUTUwuXG4gICAgIWlzSXNyO1xuICAgIC8vIFRoaXMgaXMgYSByZXZhbGlkYXRpb24gcmVxdWVzdCBpZiB0aGUgcmVxdWVzdCBpcyBmb3IgYSBzdGF0aWNcbiAgICAvLyBwYWdlIGFuZCBpdCBpcyBub3QgYmVpbmcgcmVzdW1lZCBmcm9tIGEgcG9zdHBvbmVkIHJlbmRlciBhbmRcbiAgICAvLyBpdCBpcyBub3QgYSBkeW5hbWljIFJTQyByZXF1ZXN0IHRoZW4gaXQgaXMgYSByZXZhbGlkYXRpb25cbiAgICAvLyByZXF1ZXN0LlxuICAgIGNvbnN0IGlzUmV2YWxpZGF0ZSA9IGlzSXNyICYmICFzdXBwb3J0c0R5bmFtaWNSZXNwb25zZTtcbiAgICBjb25zdCBtZXRob2QgPSByZXEubWV0aG9kIHx8ICdHRVQnO1xuICAgIGNvbnN0IHRyYWNlciA9IGdldFRyYWNlcigpO1xuICAgIGNvbnN0IGFjdGl2ZVNwYW4gPSB0cmFjZXIuZ2V0QWN0aXZlU2NvcGVTcGFuKCk7XG4gICAgY29uc3QgY29udGV4dCA9IHtcbiAgICAgICAgcGFyYW1zLFxuICAgICAgICBwcmVyZW5kZXJNYW5pZmVzdCxcbiAgICAgICAgcmVuZGVyT3B0czoge1xuICAgICAgICAgICAgZXhwZXJpbWVudGFsOiB7XG4gICAgICAgICAgICAgICAgY2FjaGVDb21wb25lbnRzOiBCb29sZWFuKG5leHRDb25maWcuZXhwZXJpbWVudGFsLmNhY2hlQ29tcG9uZW50cyksXG4gICAgICAgICAgICAgICAgYXV0aEludGVycnVwdHM6IEJvb2xlYW4obmV4dENvbmZpZy5leHBlcmltZW50YWwuYXV0aEludGVycnVwdHMpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3VwcG9ydHNEeW5hbWljUmVzcG9uc2UsXG4gICAgICAgICAgICBpbmNyZW1lbnRhbENhY2hlOiBnZXRSZXF1ZXN0TWV0YShyZXEsICdpbmNyZW1lbnRhbENhY2hlJyksXG4gICAgICAgICAgICBjYWNoZUxpZmVQcm9maWxlczogKF9uZXh0Q29uZmlnX2V4cGVyaW1lbnRhbCA9IG5leHRDb25maWcuZXhwZXJpbWVudGFsKSA9PSBudWxsID8gdm9pZCAwIDogX25leHRDb25maWdfZXhwZXJpbWVudGFsLmNhY2hlTGlmZSxcbiAgICAgICAgICAgIGlzUmV2YWxpZGF0ZSxcbiAgICAgICAgICAgIHdhaXRVbnRpbDogY3R4LndhaXRVbnRpbCxcbiAgICAgICAgICAgIG9uQ2xvc2U6IChjYik9PntcbiAgICAgICAgICAgICAgICByZXMub24oJ2Nsb3NlJywgY2IpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uQWZ0ZXJUYXNrRXJyb3I6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG9uSW5zdHJ1bWVudGF0aW9uUmVxdWVzdEVycm9yOiAoZXJyb3IsIF9yZXF1ZXN0LCBlcnJvckNvbnRleHQpPT5yb3V0ZU1vZHVsZS5vblJlcXVlc3RFcnJvcihyZXEsIGVycm9yLCBlcnJvckNvbnRleHQsIHJvdXRlclNlcnZlckNvbnRleHQpXG4gICAgICAgIH0sXG4gICAgICAgIHNoYXJlZENvbnRleHQ6IHtcbiAgICAgICAgICAgIGJ1aWxkSWRcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3Qgbm9kZU5leHRSZXEgPSBuZXcgTm9kZU5leHRSZXF1ZXN0KHJlcSk7XG4gICAgY29uc3Qgbm9kZU5leHRSZXMgPSBuZXcgTm9kZU5leHRSZXNwb25zZShyZXMpO1xuICAgIGNvbnN0IG5leHRSZXEgPSBOZXh0UmVxdWVzdEFkYXB0ZXIuZnJvbU5vZGVOZXh0UmVxdWVzdChub2RlTmV4dFJlcSwgc2lnbmFsRnJvbU5vZGVSZXNwb25zZShyZXMpKTtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBpbnZva2VSb3V0ZU1vZHVsZSA9IGFzeW5jIChzcGFuKT0+e1xuICAgICAgICAgICAgcmV0dXJuIHJvdXRlTW9kdWxlLmhhbmRsZShuZXh0UmVxLCBjb250ZXh0KS5maW5hbGx5KCgpPT57XG4gICAgICAgICAgICAgICAgaWYgKCFzcGFuKSByZXR1cm47XG4gICAgICAgICAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGVzKHtcbiAgICAgICAgICAgICAgICAgICAgJ2h0dHAuc3RhdHVzX2NvZGUnOiByZXMuc3RhdHVzQ29kZSxcbiAgICAgICAgICAgICAgICAgICAgJ25leHQucnNjJzogZmFsc2VcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCByb290U3BhbkF0dHJpYnV0ZXMgPSB0cmFjZXIuZ2V0Um9vdFNwYW5BdHRyaWJ1dGVzKCk7XG4gICAgICAgICAgICAgICAgLy8gV2Ugd2VyZSB1bmFibGUgdG8gZ2V0IGF0dHJpYnV0ZXMsIHByb2JhYmx5IE9URUwgaXMgbm90IGVuYWJsZWRcbiAgICAgICAgICAgICAgICBpZiAoIXJvb3RTcGFuQXR0cmlidXRlcykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChyb290U3BhbkF0dHJpYnV0ZXMuZ2V0KCduZXh0LnNwYW5fdHlwZScpICE9PSBCYXNlU2VydmVyU3Bhbi5oYW5kbGVSZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgVW5leHBlY3RlZCByb290IHNwYW4gdHlwZSAnJHtyb290U3BhbkF0dHJpYnV0ZXMuZ2V0KCduZXh0LnNwYW5fdHlwZScpfScuIFBsZWFzZSByZXBvcnQgdGhpcyBOZXh0LmpzIGlzc3VlIGh0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qc2ApO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHJvdXRlID0gcm9vdFNwYW5BdHRyaWJ1dGVzLmdldCgnbmV4dC5yb3V0ZScpO1xuICAgICAgICAgICAgICAgIGlmIChyb3V0ZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuYW1lID0gYCR7bWV0aG9kfSAke3JvdXRlfWA7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAnbmV4dC5yb3V0ZSc6IHJvdXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2h0dHAucm91dGUnOiByb3V0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICduZXh0LnNwYW5fbmFtZSc6IG5hbWVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4udXBkYXRlTmFtZShuYW1lKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzcGFuLnVwZGF0ZU5hbWUoYCR7bWV0aG9kfSAke3JlcS51cmx9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGhhbmRsZVJlc3BvbnNlID0gYXN5bmMgKGN1cnJlbnRTcGFuKT0+e1xuICAgICAgICAgICAgdmFyIF9jYWNoZUVudHJ5X3ZhbHVlO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VHZW5lcmF0b3IgPSBhc3luYyAoeyBwcmV2aW91c0NhY2hlRW50cnkgfSk9PntcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWdldFJlcXVlc3RNZXRhKHJlcSwgJ21pbmltYWxNb2RlJykgJiYgaXNPbkRlbWFuZFJldmFsaWRhdGUgJiYgcmV2YWxpZGF0ZU9ubHlHZW5lcmF0ZWQgJiYgIXByZXZpb3VzQ2FjaGVFbnRyeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXR1c0NvZGUgPSA0MDQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBvbi1kZW1hbmQgcmV2YWxpZGF0ZSBhbHdheXMgc2V0cyB0aGlzIGhlYWRlclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnNldEhlYWRlcigneC1uZXh0anMtY2FjaGUnLCAnUkVWQUxJREFURUQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5lbmQoJ1RoaXMgcGFnZSBjb3VsZCBub3QgYmUgZm91bmQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgaW52b2tlUm91dGVNb2R1bGUoY3VycmVudFNwYW4pO1xuICAgICAgICAgICAgICAgICAgICByZXEuZmV0Y2hNZXRyaWNzID0gY29udGV4dC5yZW5kZXJPcHRzLmZldGNoTWV0cmljcztcbiAgICAgICAgICAgICAgICAgICAgbGV0IHBlbmRpbmdXYWl0VW50aWwgPSBjb250ZXh0LnJlbmRlck9wdHMucGVuZGluZ1dhaXRVbnRpbDtcbiAgICAgICAgICAgICAgICAgICAgLy8gQXR0ZW1wdCB1c2luZyBwcm92aWRlZCB3YWl0VW50aWwgaWYgYXZhaWxhYmxlXG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIGl0J3Mgbm90IHdlIGZhbGxiYWNrIHRvIHNlbmRSZXNwb25zZSdzIGhhbmRsaW5nXG4gICAgICAgICAgICAgICAgICAgIGlmIChwZW5kaW5nV2FpdFVudGlsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY3R4LndhaXRVbnRpbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN0eC53YWl0VW50aWwocGVuZGluZ1dhaXRVbnRpbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVuZGluZ1dhaXRVbnRpbCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBjYWNoZVRhZ3MgPSBjb250ZXh0LnJlbmRlck9wdHMuY29sbGVjdGVkVGFncztcbiAgICAgICAgICAgICAgICAgICAgLy8gSWYgdGhlIHJlcXVlc3QgaXMgZm9yIGEgc3RhdGljIHJlc3BvbnNlLCB3ZSBjYW4gY2FjaGUgaXQgc28gbG9uZ1xuICAgICAgICAgICAgICAgICAgICAvLyBhcyBpdCdzIG5vdCBlZGdlLlxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNJc3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJsb2IgPSBhd2FpdCByZXNwb25zZS5ibG9iKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBDb3B5IHRoZSBoZWFkZXJzIGZyb20gdGhlIHJlc3BvbnNlLlxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaGVhZGVycyA9IHRvTm9kZU91dGdvaW5nSHR0cEhlYWRlcnMocmVzcG9uc2UuaGVhZGVycyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FjaGVUYWdzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1tORVhUX0NBQ0hFX1RBR1NfSEVBREVSXSA9IGNhY2hlVGFncztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaGVhZGVyc1snY29udGVudC10eXBlJ10gJiYgYmxvYi50eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1snY29udGVudC10eXBlJ10gPSBibG9iLnR5cGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXZhbGlkYXRlID0gdHlwZW9mIGNvbnRleHQucmVuZGVyT3B0cy5jb2xsZWN0ZWRSZXZhbGlkYXRlID09PSAndW5kZWZpbmVkJyB8fCBjb250ZXh0LnJlbmRlck9wdHMuY29sbGVjdGVkUmV2YWxpZGF0ZSA+PSBJTkZJTklURV9DQUNIRSA/IGZhbHNlIDogY29udGV4dC5yZW5kZXJPcHRzLmNvbGxlY3RlZFJldmFsaWRhdGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBleHBpcmUgPSB0eXBlb2YgY29udGV4dC5yZW5kZXJPcHRzLmNvbGxlY3RlZEV4cGlyZSA9PT0gJ3VuZGVmaW5lZCcgfHwgY29udGV4dC5yZW5kZXJPcHRzLmNvbGxlY3RlZEV4cGlyZSA+PSBJTkZJTklURV9DQUNIRSA/IHVuZGVmaW5lZCA6IGNvbnRleHQucmVuZGVyT3B0cy5jb2xsZWN0ZWRFeHBpcmU7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBDcmVhdGUgdGhlIGNhY2hlIGVudHJ5IGZvciB0aGUgcmVzcG9uc2UuXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjYWNoZUVudHJ5ID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IENhY2hlZFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib2R5OiBCdWZmZXIuZnJvbShhd2FpdCBibG9iLmFycmF5QnVmZmVyKCkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWNoZUNvbnRyb2w6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV2YWxpZGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwaXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZUVudHJ5O1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gc2VuZCByZXNwb25zZSB3aXRob3V0IGNhY2hpbmcgaWYgbm90IElTUlxuICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgc2VuZFJlc3BvbnNlKG5vZGVOZXh0UmVxLCBub2RlTmV4dFJlcywgcmVzcG9uc2UsIGNvbnRleHQucmVuZGVyT3B0cy5wZW5kaW5nV2FpdFVudGlsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXMgYSBiYWNrZ3JvdW5kIHJldmFsaWRhdGUgd2UgbmVlZCB0byByZXBvcnRcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhlIHJlcXVlc3QgZXJyb3IgaGVyZSBhcyBpdCB3b24ndCBiZSBidWJibGVkXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcmV2aW91c0NhY2hlRW50cnkgPT0gbnVsbCA/IHZvaWQgMCA6IHByZXZpb3VzQ2FjaGVFbnRyeS5pc1N0YWxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCByb3V0ZU1vZHVsZS5vblJlcXVlc3RFcnJvcihyZXEsIGVyciwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlcktpbmQ6ICdBcHAgUm91dGVyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3V0ZVBhdGg6IHNyY1BhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVUeXBlOiAncm91dGUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldmFsaWRhdGVSZWFzb246IGdldFJldmFsaWRhdGVSZWFzb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1JldmFsaWRhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzT25EZW1hbmRSZXZhbGlkYXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIHJvdXRlclNlcnZlckNvbnRleHQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgY2FjaGVFbnRyeSA9IGF3YWl0IHJvdXRlTW9kdWxlLmhhbmRsZVJlc3BvbnNlKHtcbiAgICAgICAgICAgICAgICByZXEsXG4gICAgICAgICAgICAgICAgbmV4dENvbmZpZyxcbiAgICAgICAgICAgICAgICBjYWNoZUtleSxcbiAgICAgICAgICAgICAgICByb3V0ZUtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgICAgICAgICAgaXNGYWxsYmFjazogZmFsc2UsXG4gICAgICAgICAgICAgICAgcHJlcmVuZGVyTWFuaWZlc3QsXG4gICAgICAgICAgICAgICAgaXNSb3V0ZVBQUkVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzT25EZW1hbmRSZXZhbGlkYXRlLFxuICAgICAgICAgICAgICAgIHJldmFsaWRhdGVPbmx5R2VuZXJhdGVkLFxuICAgICAgICAgICAgICAgIHJlc3BvbnNlR2VuZXJhdG9yLFxuICAgICAgICAgICAgICAgIHdhaXRVbnRpbDogY3R4LndhaXRVbnRpbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyB3ZSBkb24ndCBjcmVhdGUgYSBjYWNoZUVudHJ5IGZvciBJU1JcbiAgICAgICAgICAgIGlmICghaXNJc3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgoY2FjaGVFbnRyeSA9PSBudWxsID8gdm9pZCAwIDogKF9jYWNoZUVudHJ5X3ZhbHVlID0gY2FjaGVFbnRyeS52YWx1ZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jYWNoZUVudHJ5X3ZhbHVlLmtpbmQpICE9PSBDYWNoZWRSb3V0ZUtpbmQuQVBQX1JPVVRFKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9jYWNoZUVudHJ5X3ZhbHVlMTtcbiAgICAgICAgICAgICAgICB0aHJvdyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3IEVycm9yKGBJbnZhcmlhbnQ6IGFwcC1yb3V0ZSByZWNlaXZlZCBpbnZhbGlkIGNhY2hlIGVudHJ5ICR7Y2FjaGVFbnRyeSA9PSBudWxsID8gdm9pZCAwIDogKF9jYWNoZUVudHJ5X3ZhbHVlMSA9IGNhY2hlRW50cnkudmFsdWUpID09IG51bGwgPyB2b2lkIDAgOiBfY2FjaGVFbnRyeV92YWx1ZTEua2luZH1gKSwgXCJfX05FWFRfRVJST1JfQ09ERVwiLCB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBcIkU3MDFcIixcbiAgICAgICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFnZXRSZXF1ZXN0TWV0YShyZXEsICdtaW5pbWFsTW9kZScpKSB7XG4gICAgICAgICAgICAgICAgcmVzLnNldEhlYWRlcigneC1uZXh0anMtY2FjaGUnLCBpc09uRGVtYW5kUmV2YWxpZGF0ZSA/ICdSRVZBTElEQVRFRCcgOiBjYWNoZUVudHJ5LmlzTWlzcyA/ICdNSVNTJyA6IGNhY2hlRW50cnkuaXNTdGFsZSA/ICdTVEFMRScgOiAnSElUJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBEcmFmdCBtb2RlIHNob3VsZCBuZXZlciBiZSBjYWNoZWRcbiAgICAgICAgICAgIGlmIChpc0RyYWZ0TW9kZSkge1xuICAgICAgICAgICAgICAgIHJlcy5zZXRIZWFkZXIoJ0NhY2hlLUNvbnRyb2wnLCAncHJpdmF0ZSwgbm8tY2FjaGUsIG5vLXN0b3JlLCBtYXgtYWdlPTAsIG11c3QtcmV2YWxpZGF0ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgaGVhZGVycyA9IGZyb21Ob2RlT3V0Z29pbmdIdHRwSGVhZGVycyhjYWNoZUVudHJ5LnZhbHVlLmhlYWRlcnMpO1xuICAgICAgICAgICAgaWYgKCEoZ2V0UmVxdWVzdE1ldGEocmVxLCAnbWluaW1hbE1vZGUnKSAmJiBpc0lzcikpIHtcbiAgICAgICAgICAgICAgICBoZWFkZXJzLmRlbGV0ZShORVhUX0NBQ0hFX1RBR1NfSEVBREVSKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIElmIGNhY2hlIGNvbnRyb2wgaXMgYWxyZWFkeSBzZXQgb24gdGhlIHJlc3BvbnNlIHdlIGRvbid0XG4gICAgICAgICAgICAvLyBvdmVycmlkZSBpdCB0byBhbGxvdyB1c2VycyB0byBjdXN0b21pemUgaXQgdmlhIG5leHQuY29uZmlnXG4gICAgICAgICAgICBpZiAoY2FjaGVFbnRyeS5jYWNoZUNvbnRyb2wgJiYgIXJlcy5nZXRIZWFkZXIoJ0NhY2hlLUNvbnRyb2wnKSAmJiAhaGVhZGVycy5nZXQoJ0NhY2hlLUNvbnRyb2wnKSkge1xuICAgICAgICAgICAgICAgIGhlYWRlcnMuc2V0KCdDYWNoZS1Db250cm9sJywgZ2V0Q2FjaGVDb250cm9sSGVhZGVyKGNhY2hlRW50cnkuY2FjaGVDb250cm9sKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhd2FpdCBzZW5kUmVzcG9uc2Uobm9kZU5leHRSZXEsIG5vZGVOZXh0UmVzLCBuZXcgUmVzcG9uc2UoY2FjaGVFbnRyeS52YWx1ZS5ib2R5LCB7XG4gICAgICAgICAgICAgICAgaGVhZGVycyxcbiAgICAgICAgICAgICAgICBzdGF0dXM6IGNhY2hlRW50cnkudmFsdWUuc3RhdHVzIHx8IDIwMFxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH07XG4gICAgICAgIC8vIFRPRE86IGFjdGl2ZVNwYW4gY29kZSBwYXRoIGlzIGZvciB3aGVuIHdyYXBwZWQgYnlcbiAgICAgICAgLy8gbmV4dC1zZXJ2ZXIgY2FuIGJlIHJlbW92ZWQgd2hlbiB0aGlzIGlzIG5vIGxvbmdlciB1c2VkXG4gICAgICAgIGlmIChhY3RpdmVTcGFuKSB7XG4gICAgICAgICAgICBhd2FpdCBoYW5kbGVSZXNwb25zZShhY3RpdmVTcGFuKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGF3YWl0IHRyYWNlci53aXRoUHJvcGFnYXRlZENvbnRleHQocmVxLmhlYWRlcnMsICgpPT50cmFjZXIudHJhY2UoQmFzZVNlcnZlclNwYW4uaGFuZGxlUmVxdWVzdCwge1xuICAgICAgICAgICAgICAgICAgICBzcGFuTmFtZTogYCR7bWV0aG9kfSAke3JlcS51cmx9YCxcbiAgICAgICAgICAgICAgICAgICAga2luZDogU3BhbktpbmQuU0VSVkVSLFxuICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnaHR0cC5tZXRob2QnOiBtZXRob2QsXG4gICAgICAgICAgICAgICAgICAgICAgICAnaHR0cC50YXJnZXQnOiByZXEudXJsXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LCBoYW5kbGVSZXNwb25zZSkpO1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIC8vIGlmIHdlIGFyZW4ndCB3cmFwcGVkIGJ5IGJhc2Utc2VydmVyIGhhbmRsZSBoZXJlXG4gICAgICAgIGlmICghYWN0aXZlU3BhbiAmJiAhKGVyciBpbnN0YW5jZW9mIE5vRmFsbGJhY2tFcnJvcikpIHtcbiAgICAgICAgICAgIGF3YWl0IHJvdXRlTW9kdWxlLm9uUmVxdWVzdEVycm9yKHJlcSwgZXJyLCB7XG4gICAgICAgICAgICAgICAgcm91dGVyS2luZDogJ0FwcCBSb3V0ZXInLFxuICAgICAgICAgICAgICAgIHJvdXRlUGF0aDogbm9ybWFsaXplZFNyY1BhZ2UsXG4gICAgICAgICAgICAgICAgcm91dGVUeXBlOiAncm91dGUnLFxuICAgICAgICAgICAgICAgIHJldmFsaWRhdGVSZWFzb246IGdldFJldmFsaWRhdGVSZWFzb24oe1xuICAgICAgICAgICAgICAgICAgICBpc1JldmFsaWRhdGUsXG4gICAgICAgICAgICAgICAgICAgIGlzT25EZW1hbmRSZXZhbGlkYXRlXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIC8vIHJldGhyb3cgc28gdGhhdCB3ZSBjYW4gaGFuZGxlIHNlcnZpbmcgZXJyb3IgcGFnZVxuICAgICAgICAvLyBJZiB0aGlzIGlzIGR1cmluZyBzdGF0aWMgZ2VuZXJhdGlvbiwgdGhyb3cgdGhlIGVycm9yIGFnYWluLlxuICAgICAgICBpZiAoaXNJc3IpIHRocm93IGVycjtcbiAgICAgICAgLy8gT3RoZXJ3aXNlLCBzZW5kIGEgNTAwIHJlc3BvbnNlLlxuICAgICAgICBhd2FpdCBzZW5kUmVzcG9uc2Uobm9kZU5leHRSZXEsIG5vZGVOZXh0UmVzLCBuZXcgUmVzcG9uc2UobnVsbCwge1xuICAgICAgICAgICAgc3RhdHVzOiA1MDBcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstream%2Froute&page=%2Fapi%2Fstream%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstream%2Froute.ts&appDir=%2FUsers%2Fsqli%2FDesktop%2FMapress%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsqli%2FDesktop%2FMapress&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/stream/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/stream/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var _lib_sse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/sse */ \"(rsc)/./src/lib/sse.ts\");\n/* harmony import */ var _lib_mcp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/mcp */ \"(rsc)/./src/lib/mcp.ts\");\n/* harmony import */ var _lib_llm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/llm */ \"(rsc)/./src/lib/llm.ts\");\n/* harmony import */ var _lib_transform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/transform */ \"(rsc)/./src/lib/transform.ts\");\n/* harmony import */ var _lib_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/util */ \"(rsc)/./src/lib/util.ts\");\n\n\n\n\n\nconst runtime = \"nodejs\";\nasync function POST(req) {\n    const { query, maxUrls = Number(process.env.MAX_URLS || 8), maxNodes = Number(process.env.MAX_NODES || 16), mock } = await req.json();\n    console.log(\"🚀 SSE Stream started:\", {\n        query,\n        maxUrls,\n        maxNodes,\n        mock\n    });\n    console.log(\"🔧 Environment:\", {\n        MCP_SEARCH_URL: process.env.MCP_SEARCH_URL,\n        MCP_FETCH_URL: process.env.MCP_FETCH_URL,\n        OPENROUTER_API_KEY: process.env.OPENROUTER_API_KEY ? \"SET\" : \"NOT SET\",\n        MODEL: process.env.MODEL\n    });\n    const stream = new ReadableStream({\n        async start (controller) {\n            const send = (ev)=>{\n                console.log(\"📤 SSE Event:\", ev.type, ev.step || ev);\n                (0,_lib_sse__WEBPACK_IMPORTED_MODULE_0__.sseSend)(controller, ev);\n            };\n            try {\n                send({\n                    type: \"status\",\n                    step: \"search\"\n                });\n                let urls = [];\n                if (mock) {\n                    console.log(\"🎭 Using mock data for search\");\n                    const sample = (await __webpack_require__.e(/*! import() */ \"_rsc_src_test-fixtures_docs_sample_json\").then(__webpack_require__.t.bind(__webpack_require__, /*! @/test-fixtures/docs.sample.json */ \"(rsc)/./src/test-fixtures/docs.sample.json\", 19))).default;\n                    urls = sample.docs.map((d)=>d.url).slice(0, maxUrls);\n                    console.log(\"📄 Mock URLs found:\", urls.length);\n                } else {\n                    console.log(\"🔍 Calling MCP search with query:\", query);\n                    try {\n                        urls = await (0,_lib_mcp__WEBPACK_IMPORTED_MODULE_1__.mcpSearch)(query, maxUrls);\n                        console.log(\"✅ MCP search returned:\", urls.length, \"URLs\");\n                        console.log(\"📋 URLs:\", urls);\n                    } catch (error) {\n                        console.error(\"❌ MCP search failed:\", error);\n                        throw error;\n                    }\n                }\n                send({\n                    type: \"sources\",\n                    urls\n                });\n                send({\n                    type: \"status\",\n                    step: \"fetch\"\n                });\n                const docs = [];\n                if (mock) {\n                    console.log(\"🎭 Using mock data for fetch\");\n                    const sample = (await __webpack_require__.e(/*! import() */ \"_rsc_src_test-fixtures_docs_sample_json\").then(__webpack_require__.t.bind(__webpack_require__, /*! @/test-fixtures/docs.sample.json */ \"(rsc)/./src/test-fixtures/docs.sample.json\", 19))).default;\n                    for (const d of sample.docs.slice(0, maxUrls))docs.push(d);\n                    console.log(\"📄 Mock docs loaded:\", docs.length);\n                } else {\n                    console.log(\"📥 Fetching content for\", urls.length, \"URLs\");\n                    const tasks = urls.map(async (u, index)=>{\n                        console.log(`📄 Fetching ${index + 1}/${urls.length}: ${u}`);\n                        try {\n                            const result = await (0,_lib_mcp__WEBPACK_IMPORTED_MODULE_1__.mcpFetch)(u);\n                            console.log(`✅ Fetched ${u}:`, result.title?.substring(0, 50) + \"...\");\n                            return result;\n                        } catch (error) {\n                            console.error(`❌ Failed to fetch ${u}:`, error);\n                            return {\n                                title: u,\n                                markdown: \"\"\n                            };\n                        }\n                    });\n                    const results = await Promise.all(tasks);\n                    results.forEach((r, i)=>{\n                        const doc = {\n                            url: urls[i],\n                            title: r.title,\n                            markdown: r.markdown.slice(0, 1000)\n                        };\n                        docs.push(doc);\n                        console.log(`📋 Doc ${i + 1}: ${doc.title} (${doc.markdown.length} chars)`);\n                    });\n                }\n                send({\n                    type: \"status\",\n                    step: \"cluster\"\n                });\n                const userContent = `QUERY: ${query}\\n\\nARTICLES:\\n` + docs.map((d, i)=>`[#${i + 1}] (${d.url})\\n${d.markdown}`).join(\"\\n\\n\");\n                console.log(\"🧠 Clustering with LLM...\");\n                console.log(\"📝 User content length:\", userContent.length, \"characters\");\n                console.log(\"📋 Content preview:\", userContent.substring(0, 200) + \"...\");\n                const raw = mock ? (await __webpack_require__.e(/*! import() */ \"_rsc_src_test-fixtures_outline_sample_json\").then(__webpack_require__.t.bind(__webpack_require__, /*! @/test-fixtures/outline.sample.json */ \"(rsc)/./src/test-fixtures/outline.sample.json\", 19))).default : await (0,_lib_llm__WEBPACK_IMPORTED_MODULE_2__.callOpenRouterJSON)([\n                    {\n                        role: \"user\",\n                        content: userContent\n                    }\n                ], _lib_llm__WEBPACK_IMPORTED_MODULE_2__.SYSTEM_OUTLINE_PROMPT);\n                console.log(\"🤖 LLM response type:\", typeof raw);\n                console.log(\"🤖 LLM response preview:\", typeof raw === \"string\" ? raw.substring(0, 20000) : JSON.stringify(raw).substring(0, 20000) + \"...\");\n                const outline = typeof raw === \"string\" ? JSON.parse(raw) : raw;\n                outline.query = query;\n                outline.generatedAt = (0,_lib_util__WEBPACK_IMPORTED_MODULE_4__.nowIso)();\n                console.log(\"📊 Parsed outline:\", {\n                    categories: outline.categories.length,\n                    totalFacts: outline.categories.reduce((sum, cat)=>sum + (cat.facts?.length || 0), 0)\n                });\n                const pruned = (0,_lib_transform__WEBPACK_IMPORTED_MODULE_3__.pruneOutline)(outline, maxNodes);\n                console.log(\"✂️ Pruned outline:\", {\n                    categories: pruned.categories.length,\n                    totalFacts: pruned.categories.reduce((sum, cat)=>sum + (cat.facts?.length || 0), 0)\n                });\n                send({\n                    type: \"partialOutline\",\n                    categories: pruned.categories.map((c)=>({\n                            title: c.title\n                        }))\n                });\n                send({\n                    type: \"status\",\n                    step: \"layout\"\n                });\n                const { nodes, edges } = (0,_lib_transform__WEBPACK_IMPORTED_MODULE_3__.outlineToGraph)(pruned);\n                console.log(\"🗺️ Generated graph:\", {\n                    nodes: nodes.length,\n                    edges: edges.length\n                });\n                console.log(\"📋 Nodes:\", nodes.map((n)=>({\n                        id: n.id,\n                        type: n.type,\n                        title: n.data.title\n                    })));\n                // (Optional) elk layout can be client-side; keep server simple.\n                send({\n                    type: \"graph\",\n                    nodes,\n                    edges\n                });\n                send({\n                    type: \"status\",\n                    step: \"done\"\n                });\n                console.log(\"✅ Stream completed successfully\");\n                controller.close();\n            } catch (e) {\n                (0,_lib_sse__WEBPACK_IMPORTED_MODULE_0__.sseSend)(controller, {\n                    type: \"error\",\n                    message: e?.message || \"unknown error\"\n                });\n                controller.close();\n            }\n        }\n    });\n    return new Response(stream, {\n        headers: {\n            \"Content-Type\": \"text/event-stream\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/stream/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/llm.ts":
/*!************************!*\
  !*** ./src/lib/llm.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SYSTEM_NODE_DETAIL: () => (/* binding */ SYSTEM_NODE_DETAIL),\n/* harmony export */   SYSTEM_OUTLINE_PROMPT: () => (/* binding */ SYSTEM_OUTLINE_PROMPT),\n/* harmony export */   callOpenRouterJSON: () => (/* binding */ callOpenRouterJSON)\n/* harmony export */ });\nconst OPENROUTER = \"https://openrouter.ai/api/v1/chat/completions\";\nconst SYSTEM_OUTLINE_PROMPT = `\nYou create a citation-backed news outline from multiple articles.\n\nOUTPUT RULES\n- Produce 4–7 top-level CATEGORIES about the user's query (node = category).\n- Under each category, list 1–4 FACTS with very short titles (<= 6 words).\n- Each FACT must have 1–2 bullet points and EVERY bullet must be supported by at least one source URL from the provided set.\n- Prefer facts corroborated by >=2 distinct sources; if conflicting information appears, keep separate facts with distinct citations.\n- Keep depth <= 2 (category -> facts). Total nodes (categories + facts) <= MAX_NODES.\n- Return VALID JSON matching the provided schema exactly. If data is insufficient, return fewer categories/facts; never invent URLs.\n\nSCHEMA:\n{\n  \"query\": string,\n  \"generatedAt\": string,\n  \"categories\": [\n    {\n      \"title\": string,\n      \"facts\": [\n        {\n          \"title\": string,\n          \"bullets\": string[],\n          \"sources\": [{ \"url\": string, \"outlet\"?: string, \"quote\"?: string }]\n        }\n      ],\n      \"sources\"?: [{ \"url\": string, \"outlet\"?: string }]\n    }\n  ]\n}`;\nconst SYSTEM_NODE_DETAIL = `\nSummarize the selected category or fact using ONLY the provided excerpts and URLs.\nOutput JSON:\n{ \"summary\": string, \"keyFacts\": string[], \"sources\": [{ \"url\": string, \"outlet\"?: string, \"quote\"?: string }], \"lastUpdated\": string }\n3–4 sentence neutral summary, then 3–5 key fact bullets. Do not invent URLs.`;\nasync function callOpenRouterJSON(messages, system) {\n    console.log(\"🤖 LLM Request starting...\");\n    const key = process.env.OPENROUTER_API_KEY;\n    if (!key) {\n        console.error(\"❌ Missing OPENROUTER_API_KEY\");\n        throw new Error(\"Missing OPENROUTER_API_KEY\");\n    }\n    const model = process.env.MODEL; // set to Grok-4-fast ID in env\n    if (!model) {\n        console.error(\"❌ Missing MODEL\");\n        throw new Error(\"Missing MODEL\");\n    }\n    console.log(\"🔧 LLM Config:\", {\n        model,\n        hasKey: !!key,\n        systemLength: system?.length || 0,\n        messagesCount: messages.length\n    });\n    const body = {\n        model,\n        messages: system ? [\n            {\n                role: \"system\",\n                content: system\n            },\n            ...messages\n        ] : messages,\n        response_format: {\n            type: \"json_object\"\n        },\n        temperature: 0.1\n    };\n    console.log(\"📤 Sending request to OpenRouter...\");\n    console.log(\"📤 Request body preview:\", {\n        model: body.model,\n        messagesCount: body.messages.length,\n        systemLength: body.messages[0]?.content?.length || 0,\n        userContentLength: body.messages[1]?.content?.length || 0\n    });\n    const res = await fetch(OPENROUTER, {\n        method: \"POST\",\n        headers: {\n            Authorization: `Bearer ${key}`,\n            \"Content-Type\": \"application/json\",\n            \"HTTP-Referer\": \"https://mapress.local/\",\n            \"X-Title\": \"Mapress\"\n        },\n        body: JSON.stringify(body)\n    });\n    console.log(\"📥 LLM Response status:\", res.status, res.statusText);\n    if (!res.ok) {\n        const errorText = await res.text();\n        console.error(\"❌ LLM request failed:\", res.status, errorText);\n        throw new Error(`LLM ${res.status} ${errorText}`);\n    }\n    const data = await res.json();\n    console.log(\"📋 LLM Response data:\", {\n        choices: data.choices?.length || 0,\n        usage: data.usage,\n        model: data.model\n    });\n    const content = data.choices?.[0]?.message?.content;\n    console.log(\"✅ LLM Response content length:\", content?.length || 0);\n    console.log(\"📝 LLM Response preview:\", content?.substring(0, 200) + \"...\");\n    return content;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/llm.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/mcp.ts":
/*!************************!*\
  !*** ./src/lib/mcp.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mcpFetch: () => (/* binding */ mcpFetch),\n/* harmony export */   mcpSearch: () => (/* binding */ mcpSearch)\n/* harmony export */ });\nconst SEARCH = process.env.MCP_SEARCH_URL;\nconst FETCH = process.env.MCP_FETCH_URL;\nasync function mcpSearch(query, max = 8) {\n    console.log(\"🔍 MCP Search request:\", {\n        query,\n        max,\n        SEARCH_URL: SEARCH\n    });\n    if (!SEARCH) {\n        console.log(\"⚠️ No MCP_SEARCH_URL set, returning empty array\");\n        return []; // mock mode or fallback handled upstream\n    }\n    try {\n        const requestBody = {\n            query,\n            max\n        };\n        console.log(\"📤 Sending request to:\", `${SEARCH}/search`);\n        console.log(\"📤 Request body:\", requestBody);\n        const r = await fetch(`${SEARCH}/search`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(requestBody)\n        });\n        console.log(\"📥 Response status:\", r.status, r.statusText);\n        if (!r.ok) {\n            const errorText = await r.text();\n            console.error(\"❌ MCP search failed:\", r.status, errorText);\n            throw new Error(`MCP search failed ${r.status}: ${errorText}`);\n        }\n        const data = await r.json();\n        console.log(\"📋 MCP search response:\", data);\n        const urls = Array.isArray(data.urls) ? data.urls.slice(0, max) : [];\n        console.log(\"✅ MCP search returning:\", urls.length, \"URLs\");\n        return urls;\n    } catch (error) {\n        console.error(\"❌ MCP search error:\", error);\n        throw error;\n    }\n}\nasync function mcpFetch(url) {\n    console.log(\"📄 MCP Fetch request:\", {\n        url,\n        FETCH_URL: FETCH\n    });\n    if (!FETCH) {\n        console.error(\"❌ No MCP_FETCH_URL configured\");\n        throw new Error(\"MCP fetch not configured\");\n    }\n    try {\n        const requestBody = {\n            url\n        };\n        console.log(\"📤 Sending request to:\", `${FETCH}/fetch`);\n        console.log(\"📤 Request body:\", requestBody);\n        const r = await fetch(`${FETCH}/fetch`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(requestBody)\n        });\n        console.log(\"📥 Response status:\", r.status, r.statusText);\n        if (!r.ok) {\n            const errorText = await r.text();\n            console.error(\"❌ MCP fetch failed:\", r.status, errorText);\n            throw new Error(`MCP fetch failed ${r.status}: ${errorText}`);\n        }\n        const data = await r.json();\n        console.log(\"📋 MCP fetch response:\", {\n            title: data.title?.substring(0, 50) + \"...\",\n            markdownLength: data.markdown?.length || 0\n        });\n        const result = {\n            title: data.title ?? url,\n            markdown: data.markdown ?? data.text ?? \"\"\n        };\n        console.log(\"✅ MCP fetch returning:\", {\n            title: result.title.substring(0, 50) + \"...\",\n            markdownLength: result.markdown.length\n        });\n        return result;\n    } catch (error) {\n        console.error(\"❌ MCP fetch error:\", error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RWUsSUFBSTtRQUN6Qm5CLFFBQVFDLEdBQUcsQ0FBQywwQkFBMEI7WUFDcEMyQixPQUFPVixLQUFLVSxLQUFLLEVBQUVDLFVBQVUsR0FBRyxNQUFNO1lBQ3RDQyxnQkFBZ0JaLEtBQUthLFFBQVEsRUFBRVAsVUFBVTtRQUMzQztRQUVBLE1BQU1RLFNBQVM7WUFDYkosT0FBT1YsS0FBS1UsS0FBSyxJQUFJRjtZQUNyQkssVUFBVWIsS0FBS2EsUUFBUSxJQUFJYixLQUFLSCxJQUFJLElBQUk7UUFDMUM7UUFFQWYsUUFBUUMsR0FBRyxDQUFDLDBCQUEwQjtZQUNwQzJCLE9BQU9JLE9BQU9KLEtBQUssQ0FBQ0MsU0FBUyxDQUFDLEdBQUcsTUFBTTtZQUN2Q0MsZ0JBQWdCRSxPQUFPRCxRQUFRLENBQUNQLE1BQU07UUFDeEM7UUFFQSxPQUFPUTtJQUNULEVBQUUsT0FBT2hCLE9BQU87UUFDZGhCLFFBQVFnQixLQUFLLENBQUMsc0JBQXNCQTtRQUNwQyxNQUFNQTtJQUNSO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zcWxpL0Rlc2t0b3AvTWFwcmVzcy9zcmMvbGliL21jcC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTRUFSQ0ggPSBwcm9jZXNzLmVudi5NQ1BfU0VBUkNIX1VSTDtcbmNvbnN0IEZFVENIID0gcHJvY2Vzcy5lbnYuTUNQX0ZFVENIX1VSTDtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1jcFNlYXJjaChxdWVyeTogc3RyaW5nLCBtYXggPSA4KTogUHJvbWlzZTxzdHJpbmdbXT4ge1xuICBjb25zb2xlLmxvZyhcIvCflI0gTUNQIFNlYXJjaCByZXF1ZXN0OlwiLCB7IHF1ZXJ5LCBtYXgsIFNFQVJDSF9VUkw6IFNFQVJDSCB9KTtcbiAgXG4gIGlmICghU0VBUkNIKSB7XG4gICAgY29uc29sZS5sb2coXCLimqDvuI8gTm8gTUNQX1NFQVJDSF9VUkwgc2V0LCByZXR1cm5pbmcgZW1wdHkgYXJyYXlcIik7XG4gICAgcmV0dXJuIFtdOyAvLyBtb2NrIG1vZGUgb3IgZmFsbGJhY2sgaGFuZGxlZCB1cHN0cmVhbVxuICB9XG4gIFxuICB0cnkge1xuICAgIGNvbnN0IHJlcXVlc3RCb2R5ID0geyBxdWVyeSwgbWF4IH07XG4gICAgY29uc29sZS5sb2coXCLwn5OkIFNlbmRpbmcgcmVxdWVzdCB0bzpcIiwgYCR7U0VBUkNIfS9zZWFyY2hgKTtcbiAgICBjb25zb2xlLmxvZyhcIvCfk6QgUmVxdWVzdCBib2R5OlwiLCByZXF1ZXN0Qm9keSk7XG4gICAgXG4gICAgY29uc3QgciA9IGF3YWl0IGZldGNoKGAke1NFQVJDSH0vc2VhcmNoYCwgeyBcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsIFxuICAgICAgaGVhZGVyczogeyBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LCBcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHJlcXVlc3RCb2R5KSBcbiAgICB9KTtcbiAgICBcbiAgICBjb25zb2xlLmxvZyhcIvCfk6UgUmVzcG9uc2Ugc3RhdHVzOlwiLCByLnN0YXR1cywgci5zdGF0dXNUZXh0KTtcbiAgICBcbiAgICBpZiAoIXIub2spIHtcbiAgICAgIGNvbnN0IGVycm9yVGV4dCA9IGF3YWl0IHIudGV4dCgpO1xuICAgICAgY29uc29sZS5lcnJvcihcIuKdjCBNQ1Agc2VhcmNoIGZhaWxlZDpcIiwgci5zdGF0dXMsIGVycm9yVGV4dCk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYE1DUCBzZWFyY2ggZmFpbGVkICR7ci5zdGF0dXN9OiAke2Vycm9yVGV4dH1gKTtcbiAgICB9XG4gICAgXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHIuanNvbigpO1xuICAgIGNvbnNvbGUubG9nKFwi8J+TiyBNQ1Agc2VhcmNoIHJlc3BvbnNlOlwiLCBkYXRhKTtcbiAgICBcbiAgICBjb25zdCB1cmxzID0gQXJyYXkuaXNBcnJheShkYXRhLnVybHMpID8gZGF0YS51cmxzLnNsaWNlKDAsIG1heCkgOiBbXTtcbiAgICBjb25zb2xlLmxvZyhcIuKchSBNQ1Agc2VhcmNoIHJldHVybmluZzpcIiwgdXJscy5sZW5ndGgsIFwiVVJMc1wiKTtcbiAgICByZXR1cm4gdXJscztcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwi4p2MIE1DUCBzZWFyY2ggZXJyb3I6XCIsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWNwRmV0Y2godXJsOiBzdHJpbmcpOiBQcm9taXNlPHsgdGl0bGU6IHN0cmluZzsgbWFya2Rvd246IHN0cmluZyB9PiB7XG4gIGNvbnNvbGUubG9nKFwi8J+ThCBNQ1AgRmV0Y2ggcmVxdWVzdDpcIiwgeyB1cmwsIEZFVENIX1VSTDogRkVUQ0ggfSk7XG4gIFxuICBpZiAoIUZFVENIKSB7XG4gICAgY29uc29sZS5lcnJvcihcIuKdjCBObyBNQ1BfRkVUQ0hfVVJMIGNvbmZpZ3VyZWRcIik7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTUNQIGZldGNoIG5vdCBjb25maWd1cmVkXCIpO1xuICB9XG4gIFxuICB0cnkge1xuICAgIGNvbnN0IHJlcXVlc3RCb2R5ID0geyB1cmwgfTtcbiAgICBjb25zb2xlLmxvZyhcIvCfk6QgU2VuZGluZyByZXF1ZXN0IHRvOlwiLCBgJHtGRVRDSH0vZmV0Y2hgKTtcbiAgICBjb25zb2xlLmxvZyhcIvCfk6QgUmVxdWVzdCBib2R5OlwiLCByZXF1ZXN0Qm9keSk7XG4gICAgXG4gICAgY29uc3QgciA9IGF3YWl0IGZldGNoKGAke0ZFVENIfS9mZXRjaGAsIHsgXG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLCBcbiAgICAgIGhlYWRlcnM6IHsgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSwgXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShyZXF1ZXN0Qm9keSkgXG4gICAgfSk7XG4gICAgXG4gICAgY29uc29sZS5sb2coXCLwn5OlIFJlc3BvbnNlIHN0YXR1czpcIiwgci5zdGF0dXMsIHIuc3RhdHVzVGV4dCk7XG4gICAgXG4gICAgaWYgKCFyLm9rKSB7XG4gICAgICBjb25zdCBlcnJvclRleHQgPSBhd2FpdCByLnRleHQoKTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCLinYwgTUNQIGZldGNoIGZhaWxlZDpcIiwgci5zdGF0dXMsIGVycm9yVGV4dCk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYE1DUCBmZXRjaCBmYWlsZWQgJHtyLnN0YXR1c306ICR7ZXJyb3JUZXh0fWApO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgci5qc29uKCk7XG4gICAgY29uc29sZS5sb2coXCLwn5OLIE1DUCBmZXRjaCByZXNwb25zZTpcIiwge1xuICAgICAgdGl0bGU6IGRhdGEudGl0bGU/LnN1YnN0cmluZygwLCA1MCkgKyBcIi4uLlwiLFxuICAgICAgbWFya2Rvd25MZW5ndGg6IGRhdGEubWFya2Rvd24/Lmxlbmd0aCB8fCAwXG4gICAgfSk7XG4gICAgXG4gICAgY29uc3QgcmVzdWx0ID0geyBcbiAgICAgIHRpdGxlOiBkYXRhLnRpdGxlID8/IHVybCwgXG4gICAgICBtYXJrZG93bjogZGF0YS5tYXJrZG93biA/PyBkYXRhLnRleHQgPz8gXCJcIiBcbiAgICB9O1xuICAgIFxuICAgIGNvbnNvbGUubG9nKFwi4pyFIE1DUCBmZXRjaCByZXR1cm5pbmc6XCIsIHtcbiAgICAgIHRpdGxlOiByZXN1bHQudGl0bGUuc3Vic3RyaW5nKDAsIDUwKSArIFwiLi4uXCIsXG4gICAgICBtYXJrZG93bkxlbmd0aDogcmVzdWx0Lm1hcmtkb3duLmxlbmd0aFxuICAgIH0pO1xuICAgIFxuICAgIHJldHVybiByZXN1bHQ7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIuKdjCBNQ1AgZmV0Y2ggZXJyb3I6XCIsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIlNFQVJDSCIsInByb2Nlc3MiLCJlbnYiLCJNQ1BfU0VBUkNIX1VSTCIsIkZFVENIIiwiTUNQX0ZFVENIX1VSTCIsIm1jcFNlYXJjaCIsInF1ZXJ5IiwibWF4IiwiY29uc29sZSIsImxvZyIsIlNFQVJDSF9VUkwiLCJyZXF1ZXN0Qm9keSIsInIiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJvayIsImVycm9yVGV4dCIsInRleHQiLCJlcnJvciIsIkVycm9yIiwiZGF0YSIsImpzb24iLCJ1cmxzIiwiQXJyYXkiLCJpc0FycmF5Iiwic2xpY2UiLCJsZW5ndGgiLCJtY3BGZXRjaCIsInVybCIsIkZFVENIX1VSTCIsInRpdGxlIiwic3Vic3RyaW5nIiwibWFya2Rvd25MZW5ndGgiLCJtYXJrZG93biIsInJlc3VsdCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mcp.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/sse.ts":
/*!************************!*\
  !*** ./src/lib/sse.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sseInit: () => (/* binding */ sseInit),\n/* harmony export */   sseSend: () => (/* binding */ sseSend)\n/* harmony export */ });\nfunction sseInit(res) {\n    res.headers.set(\"Content-Type\", \"text/event-stream\");\n    res.headers.set(\"Cache-Control\", \"no-cache, no-transform\");\n    res.headers.set(\"Connection\", \"keep-alive\");\n}\nfunction sseSend(controller, data) {\n    controller.enqueue(`data: ${JSON.stringify(data)}\\n\\n`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3NzZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLFNBQVNBLFFBQVFDLEdBQVE7SUFDOUJBLElBQUlDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGdCQUFnQjtJQUNoQ0YsSUFBSUMsT0FBTyxDQUFDQyxHQUFHLENBQUMsaUJBQWlCO0lBQ2pDRixJQUFJQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxjQUFjO0FBQ2hDO0FBRU8sU0FBU0MsUUFBUUMsVUFBMkMsRUFBRUMsSUFBYTtJQUNoRkQsV0FBV0UsT0FBTyxDQUFDLENBQUMsTUFBTSxFQUFFQyxLQUFLQyxTQUFTLENBQUNILE1BQU0sSUFBSSxDQUFDO0FBQ3hEIiwic291cmNlcyI6WyIvVXNlcnMvc3FsaS9EZXNrdG9wL01hcHJlc3Mvc3JjL2xpYi9zc2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHNzZUluaXQocmVzOiBhbnkpIHtcbiAgcmVzLmhlYWRlcnMuc2V0KFwiQ29udGVudC1UeXBlXCIsIFwidGV4dC9ldmVudC1zdHJlYW1cIik7XG4gIHJlcy5oZWFkZXJzLnNldChcIkNhY2hlLUNvbnRyb2xcIiwgXCJuby1jYWNoZSwgbm8tdHJhbnNmb3JtXCIpO1xuICByZXMuaGVhZGVycy5zZXQoXCJDb25uZWN0aW9uXCIsIFwia2VlcC1hbGl2ZVwiKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNzZVNlbmQoY29udHJvbGxlcjogUmVhZGFibGVTdHJlYW1EZWZhdWx0Q29udHJvbGxlciwgZGF0YTogdW5rbm93bikge1xuICBjb250cm9sbGVyLmVucXVldWUoYGRhdGE6ICR7SlNPTi5zdHJpbmdpZnkoZGF0YSl9XFxuXFxuYCk7XG59XG4iXSwibmFtZXMiOlsic3NlSW5pdCIsInJlcyIsImhlYWRlcnMiLCJzZXQiLCJzc2VTZW5kIiwiY29udHJvbGxlciIsImRhdGEiLCJlbnF1ZXVlIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/sse.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/transform.ts":
/*!******************************!*\
  !*** ./src/lib/transform.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   outlineToGraph: () => (/* binding */ outlineToGraph),\n/* harmony export */   pruneOutline: () => (/* binding */ pruneOutline)\n/* harmony export */ });\nfunction pruneOutline(outline, maxNodes) {\n    const cats = outline.categories.map((c)=>({\n            ...c,\n            facts: [\n                ...c.facts || []\n            ]\n        }));\n    let count = cats.length + cats.reduce((s, c)=>s + (c.facts?.length || 0), 0);\n    if (count <= maxNodes) return {\n        ...outline,\n        categories: cats\n    };\n    const scored = [];\n    cats.forEach((c, ci)=>c.facts?.forEach((f, fi)=>{\n            const domains = new Set((f.sources || []).map((s)=>{\n                try {\n                    return new URL(s.url).hostname;\n                } catch  {\n                    return s.url;\n                }\n            }));\n            scored.push({\n                ci,\n                fi,\n                score: domains.size\n            });\n        }));\n    scored.sort((a, b)=>a.score - b.score); // prune least corroborated first\n    for (const { ci, fi } of scored){\n        if (count <= maxNodes) break;\n        cats[ci].facts.splice(fi, 1);\n        count--;\n    }\n    const filtered = cats.filter((c)=>(c.facts?.length || 0) > 0);\n    return {\n        ...outline,\n        categories: filtered\n    };\n}\nfunction outlineToGraph(outline) {\n    const nodes = [];\n    const edges = [];\n    outline.categories.forEach((c, i)=>{\n        const catId = `cat-${i}`;\n        nodes.push({\n            id: catId,\n            type: \"category\",\n            data: {\n                title: c.title,\n                sources: c.sources || []\n            },\n            position: {\n                x: 0,\n                y: i * 120\n            }\n        });\n        (c.facts || []).forEach((f, j)=>{\n            const factId = `cat-${i}-fact-${j}`;\n            nodes.push({\n                id: factId,\n                type: \"fact\",\n                data: {\n                    title: f.title,\n                    bullets: f.bullets,\n                    sources: f.sources\n                },\n                position: {\n                    x: 300,\n                    y: i * 120 + j * 90\n                }\n            });\n            edges.push({\n                id: `e-${catId}-${factId}`,\n                source: catId,\n                target: factId\n            });\n        });\n    });\n    return {\n        nodes,\n        edges\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SSxDQUFDLEVBQUUsRUFBRUQsTUFBTSxDQUFDLEVBQUVTLFFBQVE7Z0JBQUVFLFFBQVFYO2dCQUFPWSxRQUFRSDtZQUFPO1FBQ3pFO0lBQ0Y7SUFDQSxPQUFPO1FBQUVaO1FBQU9DO0lBQU07QUFDeEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zcWxpL0Rlc2t0b3AvTWFwcmVzcy9zcmMvbGliL3RyYW5zZm9ybS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPdXRsaW5lLCBDYXRlZ29yeU5vZGUsIEdyYXBoRWRnZSwgR3JhcGhOb2RlIH0gZnJvbSBcIi4vc2NoZW1hXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBwcnVuZU91dGxpbmUob3V0bGluZTogT3V0bGluZSwgbWF4Tm9kZXM6IG51bWJlcik6IE91dGxpbmUge1xuICBjb25zdCBjYXRzID0gb3V0bGluZS5jYXRlZ29yaWVzLm1hcChjID0+ICh7IC4uLmMsIGZhY3RzOiBbLi4uKGMuZmFjdHN8fFtdKV0gfSkpO1xuICBsZXQgY291bnQgPSBjYXRzLmxlbmd0aCArIGNhdHMucmVkdWNlKChzLGMpPT5zKyhjLmZhY3RzPy5sZW5ndGh8fDApLDApO1xuICBpZiAoY291bnQgPD0gbWF4Tm9kZXMpIHJldHVybiB7IC4uLm91dGxpbmUsIGNhdGVnb3JpZXM6IGNhdHMgfTtcblxuICB0eXBlIFNjb3JlZCA9IHsgY2k6bnVtYmVyOyBmaTpudW1iZXI7IHNjb3JlOm51bWJlciB9O1xuICBjb25zdCBzY29yZWQ6IFNjb3JlZFtdID0gW107XG4gIGNhdHMuZm9yRWFjaCgoYyxjaSkgPT4gYy5mYWN0cz8uZm9yRWFjaCgoZixmaSkgPT4ge1xuICAgIGNvbnN0IGRvbWFpbnMgPSBuZXcgU2V0KChmLnNvdXJjZXN8fFtdKS5tYXAocyA9PiB7IFxuICAgICAgdHJ5IHsgXG4gICAgICAgIHJldHVybiBuZXcgVVJMKHMudXJsKS5ob3N0bmFtZTsgXG4gICAgICB9IGNhdGNoIHsgXG4gICAgICAgIHJldHVybiBzLnVybDsgXG4gICAgICB9IFxuICAgIH0pKTtcbiAgICBzY29yZWQucHVzaCh7IGNpLCBmaSwgc2NvcmU6IGRvbWFpbnMuc2l6ZSB9KTtcbiAgfSkpO1xuICBzY29yZWQuc29ydCgoYSxiKT0+YS5zY29yZSAtIGIuc2NvcmUpOyAvLyBwcnVuZSBsZWFzdCBjb3Jyb2JvcmF0ZWQgZmlyc3RcbiAgZm9yIChjb25zdCB7Y2ksZml9IG9mIHNjb3JlZCkge1xuICAgIGlmIChjb3VudCA8PSBtYXhOb2RlcykgYnJlYWs7XG4gICAgY2F0c1tjaV0uZmFjdHMuc3BsaWNlKGZpLDEpO1xuICAgIGNvdW50LS07XG4gIH1cbiAgY29uc3QgZmlsdGVyZWQgPSBjYXRzLmZpbHRlcihjID0+IChjLmZhY3RzPy5sZW5ndGh8fDApID4gMCk7XG4gIHJldHVybiB7IC4uLm91dGxpbmUsIGNhdGVnb3JpZXM6IGZpbHRlcmVkIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvdXRsaW5lVG9HcmFwaChvdXRsaW5lOiBPdXRsaW5lKTogeyBub2RlczogR3JhcGhOb2RlW107IGVkZ2VzOiBHcmFwaEVkZ2VbXSB9IHtcbiAgY29uc3Qgbm9kZXM6IEdyYXBoTm9kZVtdID0gW107XG4gIGNvbnN0IGVkZ2VzOiBHcmFwaEVkZ2VbXSA9IFtdO1xuICBvdXRsaW5lLmNhdGVnb3JpZXMuZm9yRWFjaCgoYywgaSkgPT4ge1xuICAgIGNvbnN0IGNhdElkID0gYGNhdC0ke2l9YDtcbiAgICBub2Rlcy5wdXNoKHsgXG4gICAgICBpZDogY2F0SWQsIFxuICAgICAgdHlwZTogXCJjYXRlZ29yeVwiLCBcbiAgICAgIGRhdGE6IHsgdGl0bGU6IGMudGl0bGUsIHNvdXJjZXM6IGMuc291cmNlcyB8fCBbXSB9LCBcbiAgICAgIHBvc2l0aW9uOiB7IHg6IDAsIHk6IGkgKiAxMjAgfSBcbiAgICB9KTtcbiAgICAoYy5mYWN0c3x8W10pLmZvckVhY2goKGYsIGopID0+IHtcbiAgICAgIGNvbnN0IGZhY3RJZCA9IGBjYXQtJHtpfS1mYWN0LSR7an1gO1xuICAgICAgbm9kZXMucHVzaCh7IFxuICAgICAgICBpZDogZmFjdElkLCBcbiAgICAgICAgdHlwZTogXCJmYWN0XCIsIFxuICAgICAgICBkYXRhOiB7IHRpdGxlOiBmLnRpdGxlLCBidWxsZXRzOiBmLmJ1bGxldHMsIHNvdXJjZXM6IGYuc291cmNlcyB9LCBcbiAgICAgICAgcG9zaXRpb246IHsgeDogMzAwLCB5OiAoaSoxMjApKyhqKjkwKSB9IFxuICAgICAgfSk7XG4gICAgICBlZGdlcy5wdXNoKHsgaWQ6IGBlLSR7Y2F0SWR9LSR7ZmFjdElkfWAsIHNvdXJjZTogY2F0SWQsIHRhcmdldDogZmFjdElkIH0pO1xuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIHsgbm9kZXMsIGVkZ2VzIH07XG59XG4iXSwibmFtZXMiOlsicHJ1bmVPdXRsaW5lIiwib3V0bGluZSIsIm1heE5vZGVzIiwiY2F0cyIsImNhdGVnb3JpZXMiLCJtYXAiLCJjIiwiZmFjdHMiLCJjb3VudCIsImxlbmd0aCIsInJlZHVjZSIsInMiLCJzY29yZWQiLCJmb3JFYWNoIiwiY2kiLCJmIiwiZmkiLCJkb21haW5zIiwiU2V0Iiwic291cmNlcyIsIlVSTCIsInVybCIsImhvc3RuYW1lIiwicHVzaCIsInNjb3JlIiwic2l6ZSIsInNvcnQiLCJhIiwiYiIsInNwbGljZSIsImZpbHRlcmVkIiwiZmlsdGVyIiwib3V0bGluZVRvR3JhcGgiLCJub2RlcyIsImVkZ2VzIiwiaSIsImNhdElkIiwiaWQiLCJ0eXBlIiwiZGF0YSIsInRpdGxlIiwicG9zaXRpb24iLCJ4IiwieSIsImoiLCJmYWN0SWQiLCJidWxsZXRzIiwic291cmNlIiwidGFyZ2V0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/transform.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/util.ts":
/*!*************************!*\
  !*** ./src/lib/util.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hostname: () => (/* binding */ hostname),\n/* harmony export */   nowIso: () => (/* binding */ nowIso),\n/* harmony export */   unique: () => (/* binding */ unique)\n/* harmony export */ });\nconst nowIso = ()=>new Date().toISOString();\nconst hostname = (u)=>{\n    try {\n        return new URL(u).hostname.replace(/^www\\./, \"\");\n    } catch  {\n        return u;\n    }\n};\nfunction unique(arr, key) {\n    const seen = new Set();\n    const out = [];\n    for (const x of arr){\n        const k = key(x);\n        if (!seen.has(k)) {\n            seen.add(k);\n            out.push(x);\n        }\n    }\n    return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3V0aWwudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sTUFBTUEsU0FBUyxJQUFNLElBQUlDLE9BQU9DLFdBQVcsR0FBRztBQUU5QyxNQUFNQyxXQUFXLENBQUNDO0lBQ3ZCLElBQUk7UUFDRixPQUFPLElBQUlDLElBQUlELEdBQUdELFFBQVEsQ0FBQ0csT0FBTyxDQUFDLFVBQVU7SUFDL0MsRUFBRSxPQUFNO1FBQ04sT0FBT0Y7SUFDVDtBQUNGLEVBQUU7QUFFSyxTQUFTRyxPQUFVQyxHQUFRLEVBQUVDLEdBQXFCO0lBQ3ZELE1BQU1DLE9BQU8sSUFBSUM7SUFDakIsTUFBTUMsTUFBVyxFQUFFO0lBQ25CLEtBQUssTUFBTUMsS0FBS0wsSUFBSztRQUNuQixNQUFNTSxJQUFJTCxJQUFJSTtRQUNkLElBQUksQ0FBQ0gsS0FBS0ssR0FBRyxDQUFDRCxJQUFJO1lBQ2hCSixLQUFLTSxHQUFHLENBQUNGO1lBQ1RGLElBQUlLLElBQUksQ0FBQ0o7UUFDWDtJQUNGO0lBQ0EsT0FBT0Q7QUFDVCIsInNvdXJjZXMiOlsiL1VzZXJzL3NxbGkvRGVza3RvcC9NYXByZXNzL3NyYy9saWIvdXRpbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgbm93SXNvID0gKCkgPT4gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xuXG5leHBvcnQgY29uc3QgaG9zdG5hbWUgPSAodTogc3RyaW5nKSA9PiB7IFxuICB0cnkgeyBcbiAgICByZXR1cm4gbmV3IFVSTCh1KS5ob3N0bmFtZS5yZXBsYWNlKC9ed3d3XFwuLywgXCJcIik7IFxuICB9IGNhdGNoIHsgXG4gICAgcmV0dXJuIHU7IFxuICB9IFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIHVuaXF1ZTxUPihhcnI6IFRbXSwga2V5OiAodDogVCkgPT4gc3RyaW5nKSB7XG4gIGNvbnN0IHNlZW4gPSBuZXcgU2V0PHN0cmluZz4oKTsgXG4gIGNvbnN0IG91dDogVFtdID0gW107XG4gIGZvciAoY29uc3QgeCBvZiBhcnIpIHsgXG4gICAgY29uc3QgayA9IGtleSh4KTsgXG4gICAgaWYgKCFzZWVuLmhhcyhrKSkgeyBcbiAgICAgIHNlZW4uYWRkKGspOyBcbiAgICAgIG91dC5wdXNoKHgpOyBcbiAgICB9IFxuICB9XG4gIHJldHVybiBvdXQ7XG59XG4iXSwibmFtZXMiOlsibm93SXNvIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiaG9zdG5hbWUiLCJ1IiwiVVJMIiwicmVwbGFjZSIsInVuaXF1ZSIsImFyciIsImtleSIsInNlZW4iLCJTZXQiLCJvdXQiLCJ4IiwiayIsImhhcyIsImFkZCIsInB1c2giXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/util.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstream%2Froute&page=%2Fapi%2Fstream%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstream%2Froute.ts&appDir=%2FUsers%2Fsqli%2FDesktop%2FMapress%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsqli%2FDesktop%2FMapress&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();